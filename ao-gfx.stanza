defpackage ao-gfx :
  import core
  import math
  import collections
  import ao
  import gl
  import geom
  import geom-gfx

defmethod render (tree:Tree) -> False :
  ;; TODO MAKE PARAMETERIZABLE
  val mesh = tree-render-mesh(tree, Box(V3f(-5.0f, -5.0f, -5.0f), V3f(5.0f, 5.0f, 5.0f)), 50.0f)
  println-all(["MESH: V = " length(vertices(mesh)) " F = " length(faces(mesh))])
  render(mesh)

defmethod render (lay:TreeLayer) -> False :
  gl-push-matrix()
  gl-translate3(pos(lay))
  gl-push-attrib(GL-CURRENT-BIT)
  gl-color4(color(lay))
  render(tree(lay))
  gl-pop-attrib()
  gl-pop-matrix()

defmethod render (lay:TreeBlock) -> False :
  for layer in layers(lay) do :
    render(layer)

defmethod render (lay:TreeLayout) -> False :
  for block in blocks(lay) do :
    render(block)

