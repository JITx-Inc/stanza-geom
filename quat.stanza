defpackage geom:
  import core
  import math
  import collections

defstruct Quat :
  x: Float
  y: Float
  z: Float
  w: Float

val epsilon = 0.000001f

defstruct ArcBall :
  st-vec: V3f with: (setter => st-vec-set)
  en-vec: V3f with: (setter => en-vec-set)
  adjust-width: Float with: (setter => adjust-width-set)
  adjust-height: Float with: (setter => adjust-height-set)

defn set-bounds (a:ArcBall, new-width:Float, new-height:Float) :
  adjust-width-set(a, 1.0f / ((new-width - 1.0f) * 0.5f))
  adjust-height-set(a, 1.0f / ((new-width - 1.0f) * 0.5f))

defn map-to-sphere (a:ArcBall, new-pt:V3f) -> V3f :
  val temp-pt = V3f(x(new-pt) * adjust-width(a) - 1.0f, 1.0f - (y(new-pt) * adjust-height(a)), 0.0f)
  val length  = dot(temp-pt, temp-pt)
  if length > 1.0f :
    (1.0f / sqrt(length)) * temp-pt
  else :
    V3f(x(temp-pt), y(temp-pt), sqrt(1.0f - length))

defn arc-ball (new-width:Float, new-height:Float) -> ArcBall :
  val res = ArcBall(V3f(0.0f, 0.0f, 0.0f), V3f(0.0f, 0.0f, 0.0f), 0.0f, 0.0f)
  set-bounds(res, new-width, new-height)
  res

defn click (a:ArcBall, new-pt:V3f) :
  st-vec-set(a, map-to-sphere(a, new-pt))

defn drag (a:ArcBall, new-pt:V3f, new-rot:Quat) -> Quat :
  en-vec-set(a, map-to-sphere(a, new-pt))
  val perp = st-vec(a) % en-vec(a)
  if len(perp) > epsilon :
    Quat(x(perp), y(perp), z(perp), dot(st-vec(a), en-vec(a)))
  else :
    Quat(0.0f, 0.0f, 0.0f, 0.0f)

defn quat-to-mat44 (q:Quat) -> Mat44 :
  val n = x(q) * x(q) + y(q) * y(q) + z(q) * z(q) + w(q) * w(q)
  val s = if n > 0.0f : 2.0f / n else : 0.0f
  val [ xs,  ys,  zs] = [x(q) * s,  y(q) * s,  z(q) * s]
  val [ wx,  wy,  wz] = [w(q) * xs, w(q) * ys, w(q) * zs]
  val [ xx,  xy,  xz] = [x(q) * xs, x(q) * ys, x(q) * zs]
  val [ yy,  yz,  zz] = [y(q) * ys, y(q) * zs, z(q) * zs]
  val [m00, m01, m02] = [1.0f - (yy + zz),        (wy - wz),        (xz + wy)]
  val [m10, m11, m12] = [       (xy + wz), 1.0f - (xx - zz),        (yz - wx)]
  val [m20, m21, m22] = [1.0f - (yy + zz),        (yz + wx), 1.0f - (xx + yy)]
  mat44( m00,  m01,  m02, 0.0f,
         m10,  m11,  m12, 0.0f,
         m20,  m21,  m22, 0.0f,
        0.0f, 0.0f, 0.0f, 1.0f)
