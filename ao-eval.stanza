defpackage ao-eval :
   import core
   import math
   import collections
   import reader
   import geom
   import eval
   import ao
   import glu
   import font

public defn eval-ao (s:String) -> Geom :
  val forms = read-all(s)
  val es = unwrap-all(parse(forms))
  ;; jit({ eval-begin(top-env, es) } )
  jit(eval-begin(top-env, es))

;;; TODO: TEMPORARY CHECKING UNTIL REPL MODE IMPLEMENTED IN COMPILER

val Vec3FieldT = Type(`Vec3Field, fn (x) : x is Vec3Field, fn (x): x as Vec3Field)
add-binding(top-env, `Vec3Field, Vec3FieldT)
val FloFieldT = Type(`FloField, fn (x) : x is FloField, fn (x): x as FloField)
add-binding(top-env, `FloField, FloFieldT)
val FloFieldThunkT = Type(`FloFieldThunk, fn (x) : x is (() -> FloField), fn (x): x as (() -> FloField))
add-binding(top-env, `FloFieldThunk, FloFieldThunkT)

public defn geom-eval-top-env () :
  eval-top-env()
  add-binding(top-env, `V2f, V2f)
  add-binding(top-env, `V3f, V3f)
  add-binding(top-env, `V3i, V3i)
  add-binding(top-env, `Box, Box)
  add-binding(top-env, `PolyLine, PolyLine)
  add-binding(top-env, `Polygon, Polygon)
  add-binding(top-env, `Contour, Contour)
  add-binding(top-env, `Mesh, Mesh)
  add-binding(top-env, `points, points)
  add-binding(top-env, `segments, segments)
  add-binding(top-env, `triangulate, triangulate)
  add-binding(top-env, `circle-n, circle-n)
  add-binding(top-env, `to-polygon, to-polygon)
  add-binding(top-env, `*font*, *font*)
  add-binding(top-env, `get-glyph, get-glyph)
  add-binding(top-env, `polyline, polyline)

public defn ao-eval-top-env () :
  geom-eval-top-env()
  add-binding(top-env, `pi, to-float(pi))
  add-binding(top-env, `hpi, to-float(0.5 * pi))
  add-binding(top-env, `pi2, to-float(2.0 * pi))
  add-binding(top-env, `lit, lit)
  add-binding(top-env, `x, fab-x)
  add-binding(top-env, `y, fab-y)
  add-binding(top-env, `z, fab-z)
  ;; add-binding(top-env, `bounds, bounds)
  add-binding(top-env, `Vec3Field, Vec3Field)
  add-binding(top-env, `Vec2Field, Vec2Field)
  add-binding(top-env, `rem, rem)
  add-binding(top-env, `bit-and, bit-and)
  add-binding(top-env, `bit-or, bit-or)
  add-binding(top-env, `plus, plus)
  add-binding(top-env, `minus, minus)
  add-binding(top-env, `times, times)
  add-binding(top-env, `divide, divide)
  add-binding(top-env, `negate, negate)
  add-binding(top-env, `sin, sin)
  add-binding(top-env, `cos, cos)
  add-binding(top-env, `tan, tan)
  add-binding(top-env, `asin, asin)
  add-binding(top-env, `acos, acos)
  add-binding(top-env, `atan, atan)
  add-binding(top-env, `atan2, atan2)
  add-binding(top-env, `pow, pow)
  add-binding(top-env, `exp, exp)
  add-binding(top-env, `sqr, sqr)
  add-binding(top-env, `edge, edge)
  add-binding(top-env, `tri, triangle)
  add-binding(top-env, `rect, rect)
  add-binding(top-env, `square, square)
  add-binding(top-env, `circle, circle)
  ;; add-binding(top-env, `to-field, to-field)
  add-binding(top-env, `to-field2, to-field2)
  add-binding(top-env, `convex, convex)
  add-binding(top-env, `cube, cube)
  add-binding(top-env, `box, box)
  add-binding(top-env, `round-box, round-box)
  add-binding(top-env, `sphere, sphere)
  add-binding(top-env, `mov, move)
  add-binding(top-env, `mov-x, move-x)
  add-binding(top-env, `mov-y, move-y)
  add-binding(top-env, `mov-z, move-x)
  add-binding(top-env, `mag, scale)
  add-binding(top-env, `mag1, scale1)
  add-binding(top-env, `mag-x, scale-x)
  add-binding(top-env, `mag-y, scale-y)
  add-binding(top-env, `mag-z, scale-z)
  ;; add-binding(top-env, `rot, rotate)
  add-binding(top-env, `rot-x, rotate-x)
  add-binding(top-env, `rot-y, rotate-y)
  add-binding(top-env, `rot-z, rotate-z)
  add-binding(top-env, `rev, revolve-y)
  add-binding(top-env, `reflect-x, reflect-x)
  add-binding(top-env, `reflect-y, reflect-y)
  add-binding(top-env, `reflect-z, reflect-z)
  add-binding(top-env, `reflect-xy, reflect-xy)
  add-binding(top-env, `reflect-xz, reflect-xz)
  add-binding(top-env, `reflect-yz, reflect-yz)
  add-binding(top-env, `shear, shear-x-y)
  add-binding(top-env, `taper, taper-xy-z)
  add-binding(top-env, `offset, offset)
  add-binding(top-env, `clearance, clearance)
  add-binding(top-env, `shell, shell)
  add-binding(top-env, `blend, blend)
  add-binding(top-env, `morph, morph)
  add-binding(top-env, `extrude, extrude-z)
  add-binding(top-env, `cyl, cylinder-z)
  add-binding(top-env, `capsule-z, capsule-z)
  add-binding(top-env, `capsule, capsule)
  add-binding(top-env, `capsule2, capsule2)
  add-binding(top-env, `thicken, thicken)
  ;; add-binding(top-env, `widen, widen)
  add-binding(top-env, `cone, cone-z)
  add-binding(top-env, `pyr, pyramid-z)
  add-binding(top-env, `torus, torus-z)

