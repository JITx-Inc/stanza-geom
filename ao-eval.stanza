defpackage ao-eval :
   import core
   import math
   import collections
   import reader
   import geom
   import eval
   import ao

public defn eval-ao (s:String, to-mesh: (Tree) -> Mesh, default: Mesh) -> Mesh :
  try :
    val forms = read-all(s)
    val es = unwrap-all(parse(forms))
    val res = jit({ eval-begin(top-env, es) })
    val m = to-mesh(res)
    m
  catch (e:Exception) :
    default

add-binding(top-env, `pi, 3.1415)
add-binding(top-env, `lit, Function(`lit, lit))
add-binding(top-env, `x, Function(`x, fab-x))
add-binding(top-env, `y, Function(`y, fab-y))
add-binding(top-env, `z, Function(`z, fab-z))
add-binding(top-env, `diff, Function(`diff, difference))
add-binding(top-env, `plus, Function(`plus, plus))
add-binding(top-env, `minus, Function(`minus, minus))
add-binding(top-env, `times, Function(`times, times))
add-binding(top-env, `divide, Function(`divide, divide))
add-binding(top-env, `negate, Function(`negate, negate))
add-binding(top-env, `sin, Function(`sin, sin))
add-binding(top-env, `cos, Function(`cos, cos))
add-binding(top-env, `tan, Function(`tan, tan))
add-binding(top-env, `asin, Function(`asin, asin))
add-binding(top-env, `acos, Function(`acos, acos))
add-binding(top-env, `atan, Function(`atan, atan))
add-binding(top-env, `atan2, Function(`atan2, atan2))
add-binding(top-env, `pow, Function(`pow, pow))
add-binding(top-env, `exp, Function(`exp, exp))
add-binding(top-env, `sqr, Function(`sqr, square))
add-binding(top-env, `rect, Function(`rect, rect))
add-binding(top-env, `circle, Function(`circle, circle))
add-binding(top-env, `cube, Function(`cube, cube))
add-binding(top-env, `sphere, Function(`sphere, sphere))
add-binding(top-env, `mov, Function(`mov, move))
add-binding(top-env, `mov-x, Function(`mov-x, move-x))
add-binding(top-env, `mov-y, Function(`mov-y, move-y))
add-binding(top-env, `mov-z, Function(`mov-z, move-x))
add-binding(top-env, `mag, Function(`mag, scale))
add-binding(top-env, `mag1, Function(`mag1, scale1))
add-binding(top-env, `mag-x, Function(`mag-x, scale-x))
add-binding(top-env, `mag-y, Function(`mag-y, scale-y))
add-binding(top-env, `mag-z, Function(`mag-z, scale-z))
;; add-binding(top-env, `rot, Function(`rot, rotate))
add-binding(top-env, `rot-x, Function(`rot-x, rotate-x))
add-binding(top-env, `rot-y, Function(`rot-y, rotate-y))
add-binding(top-env, `rot-z, Function(`rot-z, rotate-z))
add-binding(top-env, `reflect-x, Function(`reflect-x, reflect-x))
add-binding(top-env, `reflect-y, Function(`reflect-y, reflect-y))
add-binding(top-env, `reflect-z, Function(`reflect-z, reflect-z))
add-binding(top-env, `reflect-xy, Function(`reflect-xy, reflect-xy))
add-binding(top-env, `reflect-xz, Function(`reflect-xz, reflect-xz))
add-binding(top-env, `reflect-yz, Function(`reflect-yz, reflect-yz))
add-binding(top-env, `offset, Function(`offset, offset))
add-binding(top-env, `clearance, Function(`clearance, clearance))
add-binding(top-env, `blend, Function(`blend, blend))
add-binding(top-env, `morph, Function(`morph, morph))
add-binding(top-env, `extrude, Function(`extrude, extrude-z))
add-binding(top-env, `cyl, Function(`cyl, cylinder-z))
add-binding(top-env, `cone, Function(`cone, cone-z))
add-binding(top-env, `pyr, Function(`pyr, pyramid-z))
add-binding(top-env, `torus, Function(`torus, torus-z))
