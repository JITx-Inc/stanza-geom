defpackage ao-eval :
   import core
   import math
   import collections
   import reader
   import geom
   import eval
   import ao

public defn eval-ao (s:String) -> Tree :
  val forms = read-all(s)
  val es = unwrap-all(parse(forms))
  jit({ eval-begin(top-env, es) })

add-binding(top-env, `pi, 3.1415)
add-binding(top-env, `lit, lit)
add-binding(top-env, `x, fab-x)
add-binding(top-env, `y, fab-y)
add-binding(top-env, `z, fab-z)
add-binding(top-env, `diff, difference)
add-binding(top-env, `bit-and, bit-and)
add-binding(top-env, `bit-or, bit-or)
add-binding(top-env, `plus, plus)
add-binding(top-env, `minus, minus)
add-binding(top-env, `times, times)
add-binding(top-env, `divide, divide)
add-binding(top-env, `negate, negate)
add-binding(top-env, `sin, sin)
add-binding(top-env, `cos, cos)
add-binding(top-env, `tan, tan)
add-binding(top-env, `asin, asin)
add-binding(top-env, `acos, acos)
add-binding(top-env, `atan, atan)
add-binding(top-env, `atan2, atan2)
add-binding(top-env, `pow, pow)
add-binding(top-env, `exp, exp)
add-binding(top-env, `sqr, square)
add-binding(top-env, `rect, rect)
add-binding(top-env, `circle, circle)
add-binding(top-env, `cube, cube)
add-binding(top-env, `sphere, sphere)
add-binding(top-env, `mov, move)
add-binding(top-env, `mov-x, move-x)
add-binding(top-env, `mov-y, move-y)
add-binding(top-env, `mov-z, move-x)
add-binding(top-env, `mag, scale)
add-binding(top-env, `mag1, scale1)
add-binding(top-env, `mag-x, scale-x)
add-binding(top-env, `mag-y, scale-y)
add-binding(top-env, `mag-z, scale-z)
;; add-binding(top-env, `rot, rotate)
add-binding(top-env, `rot-x, rotate-x)
add-binding(top-env, `rot-y, rotate-y)
add-binding(top-env, `rot-z, rotate-z)
add-binding(top-env, `reflect-x, reflect-x)
add-binding(top-env, `reflect-y, reflect-y)
add-binding(top-env, `reflect-z, reflect-z)
add-binding(top-env, `reflect-xy, reflect-xy)
add-binding(top-env, `reflect-xz, reflect-xz)
add-binding(top-env, `reflect-yz, reflect-yz)
add-binding(top-env, `offset, offset)
add-binding(top-env, `clearance, clearance)
add-binding(top-env, `blend, blend)
add-binding(top-env, `morph, morph)
add-binding(top-env, `extrude, extrude-z)
add-binding(top-env, `cyl, cylinder-z)
add-binding(top-env, `cone, cone-z)
add-binding(top-env, `pyr, pyramid-z)
add-binding(top-env, `torus, torus-z)
